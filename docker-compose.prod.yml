version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: texas_poker_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-texas_poker}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - texas_poker_network

  redis:
    image: redis:7-alpine
    container_name: texas_poker_redis_prod
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - texas_poker_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: texas_poker_backend_prod
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-texas_poker}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - texas_poker_network
    healthcheck:
      test: ["CMD", "node", "dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: texas_poker_frontend_prod
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - texas_poker_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 可选：监控服务
  # nginx-exporter:
  #   image: nginx/nginx-prometheus-exporter:0.10.0
  #   container_name: texas_poker_nginx_exporter
  #   command:
  #     - -nginx.scrape-uri=http://frontend/nginx_status
  #   ports:
  #     - "9113:9113"
  #   depends_on:
  #     - frontend
  #   networks:
  #     - texas_poker_network

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  texas_poker_network:
    driver: bridge